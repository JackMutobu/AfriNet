@page "/signup"
@using System.ComponentModel.DataAnnotations;
@using AfriNetSharedClientLib.Auth.Models;
@using AfriNetSharedClientLib.Auth.Services;
@layout EmptyLayout

<div class="grid md:grid-cols-2">
    <div class="hidden md:block h-full md:h-screen">
        <SideSectionView />
    </div>
    <div class="bg-gray-100 py-5 px-2 lg:px-24 space-y-5 flex flex-col justify-center" style="max-height: 100vh;">
        <div class="p-4 space-y-6 bg-neutral-100 h-[100vh]">
            <div class="flex justify-center">
                <img class="h-40" src="/images/afrinet-logo.svg" />
            </div>
            <div class="space-y-4 md:flex md:flex-col items-center">
                <div class="space-y-0.5">
                    <h2 class="text-neutral text-xl font-semibold">Créer un compte</h2>
                    <p class="font-extralight text-accent">Veuillez entrer les détails ci-dessous pour continuer</p>
                </div>
                <div class="py-2">
                    <EditForm Model="@model" OnValidSubmit="@OnSignup" class="flex flex-col items-center max-w-md min-w-[22rem] space-y-2">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <InputText @bind-Value="@model.Firstname" placeholder="Prénom" class="input input-bordered w-full" />
                        <InputText @bind-Value="@model.Lastname"  placeholder="Postnom" class="input input-bordered w-full" />
                        <InputText @bind-Value="@model.Phone" placeholder="Numéro de téléphone" class="input input-bordered w-full" />
                        <InputText @bind-Value="@model.Password" type="password" placeholder="Mot de passe" class="input input-bordered w-full" />
                        <InputText @bind-Value="@model.ConfirmPassword"  type="password" placeholder="Confirmer le mot de passe" class="input input-bordered w-full" />
                        <div class="w-full space-y-2">
                            <button type="submit" class="btn btn-primary w-full rounded-full shadow-md">
                                <span class="@(isBusy ? "loading" : "") loading-spinner"></span>
                                Suivant
                            </button>
                            <p class="text-center text-neutral">J'ai déjà un compte?<a href="login" class="btn btn-link normal-case no-underline -ml-2 -mt-1">Se connecter</a></p>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    SignupModel model = new SignupModel();
    string errorMessage = string.Empty;
    bool isBusy = false;

    [Inject] IAuthService AuthService { get; set; } = null!;
    [Inject] NavigationManager NavigationManager { get; set; } = null!;

    Task<Unit> BeforeSignup()
    {
        isBusy = true;
        errorMessage = string.Empty;
        return Task.FromResult(Unit.Default);
    }

    Task<Unit> AfterSignup()
    {
        isBusy = false;
        return Task.FromResult(Unit.Default);
    }

    Task<Unit> OnSignup()
    => BeforeSignup()
       .MapAsync(_ => GetSignupResult())
       .MapAsync(_ => AfterSignup());

    Task<Unit> GetSignupResult()
    => AuthService.Signup(new SignupRequest(model.Adapt<SignupUserRequest>(), model.Password!), CancellationToken.None)
        .Where(user => user is not null)
        .Match(user => NavigationManager.NavigateTo("login"), ex => errorMessage = ex.Message);

    class SignupModel
    {
        [Required(ErrorMessage = "Veuillez entrer le prénom")]
        public string? Firstname { get; set; }

        [Required(ErrorMessage = "Veuillez entrer le postnom")]
        public string? Lastname { get; set; }

        [Required(ErrorMessage = "Veuillez entrer le numéro de téléphone")]
        public string? Phone { get; set; }

        [Required(ErrorMessage = "Veuillez entrer le mot de passe")]
        public string? Password { get; set; }

        [Compare(nameof(Password), ErrorMessage = "Les mots de passe ne correspondent pas")]
        [Required(ErrorMessage = "Veuillez confirmer le mot de passe")]
        public string? ConfirmPassword { get; set; }
    }
}